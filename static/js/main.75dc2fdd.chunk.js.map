{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","handleAddMovie","useState","query","setQuery","setMovie","error","setError","isLoading","setIsLoading","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","result","movieData","Title","Plot","Poster","imdbID","newMovie","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","App","setMovies","prevState","find","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75dc2fdd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\nimport { Movie } from './types/Movie';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cbef9849&t';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport const newMovie = (movieData: MovieData): Movie => {\n  const {\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  } = movieData;\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { newMovie, getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  handleAddMovie: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC <Props> = ({ handleAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFindMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(query)\n      .then(result => {\n        if ('imdbID' in result) {\n          setMovie(newMovie(result));\n        } else {\n          setError(true);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setError(false);\n  };\n\n  const handleClear = () => {\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleAddButton = () => {\n    handleClear();\n\n    if (movie) {\n      handleAddMovie(movie);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFindMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={\n                isLoading\n                  ? 'button is-light is-loading'\n                  : 'button is-light'\n              }\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    setMovies(prevState => {\n      const currentMovie = prevState\n        .find(state => state.imdbId === movie.imdbId);\n\n      return currentMovie ? prevState : [\n        ...prevState,\n        movie,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie handleAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}